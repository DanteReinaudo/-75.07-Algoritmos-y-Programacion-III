TestCase subclass: #AuxilioTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Algo3ParcialTests'!!AuxilioTest methodsFor: 'tests' stamp: 'TABARESKI 12/1/2020 21:28'!test04SePideAuxilioEnFaseDispoParaDosPasajerosYNoSeLoLlevan	| unAuxilio |	unAuxilio := Auxilio inicializarAuxiloEnFaseDISPO.	self should: [ unAuxilio cargarCantidadPasajeros: 2 ] raise: AuxiliarMasDeUnPasajeroEnDISPOError.	self assert: (unAuxilio cantidadPasajeros) equals: 0.! !!AuxilioTest methodsFor: 'tests' stamp: 'TABARESKI 12/1/2020 21:25'!test03SePideAuxilioEnFaseNormalParaUnPasajero	| unAuxilio |	unAuxilio := Auxilio inicializarAuxiloEnFaseNormal.	unAuxilio cargarCantidadPasajeros: 1.	self assert: ( unAuxilio cantidadPasajeros ) equals: 1.! !!AuxilioTest methodsFor: 'tests' stamp: 'TABARESKI 12/1/2020 21:25'!test02SePideAuxilioEnFaseASPOaraUnPasajeroYNoSeLoAuxilia	| unAuxilio |	unAuxilio := Auxilio inicializarAuxiloEnFaseASPO.	self should: [ unAuxilio cargarCantidadPasajeros: 1 ] raise: AuxiliarPasajerosEnASPOError.	self assert: (unAuxilio cantidadPasajeros) equals: 0.! !!AuxilioTest methodsFor: 'tests' stamp: 'TABARESKI 12/1/2020 20:40'!test01SePideAuxilioEnFaseDispoParaUnPasajero	| unAuxilio |	unAuxilio := Auxilio inicializarAuxiloEnFaseDISPO.	unAuxilio cargarCantidadPasajeros: 1.	self assert: ( unAuxilio cantidadPasajeros ) equals: 1.! !