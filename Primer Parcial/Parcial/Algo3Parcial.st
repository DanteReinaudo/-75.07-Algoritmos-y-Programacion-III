Error subclass: #AuxiliarMasDeDosPasajeroEnFaseNormalError	instanceVariableNames: ''	classVariableNames: ''	package: 'Algo3Parcial-Excepciones'!Error subclass: #AuxiliarMasDeUnPasajeroEnDISPOError	instanceVariableNames: ''	classVariableNames: ''	package: 'Algo3Parcial-Excepciones'!Error subclass: #AuxiliarPasajerosEnASPOError	instanceVariableNames: ''	classVariableNames: ''	package: 'Algo3Parcial-Excepciones'!Error subclass: #CantidadInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'Algo3Parcial-Excepciones'!Object subclass: #Auxilio	instanceVariableNames: 'fase cantidadPasajeros'	classVariableNames: ''	package: 'Algo3Parcial'!!Auxilio commentStamp: 'TABARESKI 12/1/2020 19:58' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidadPasajeros:		<Object>	fase:		<Object>    Implementation Points!!Auxilio methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 20:33'!cargarCantidadPasajeros: unaCantidadDePasajeros	self validarCantidadPasajeros: unaCantidadDePasajeros.	cantidadPasajeros := (fase auxiliarCantidadPasajeros: unaCantidadDePasajeros).! !!Auxilio methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 20:02'!validarCantidadPasajeros: unaCantidadDePasajeros 	(unaCantidadDePasajeros  isNumber) ifFalse: [ CantidadInvalidaError  signal ].	(unaCantidadDePasajeros  isFloat | (unaCantidadDePasajeros  < 1)) ifTrue: [ CantidadInvalidaError signal ]. ! !!Auxilio methodsFor: 'initialization' stamp: 'Anonymous 12/1/2020 19:25'!setFaseCovidASPO		fase := FaseASPO new.! !!Auxilio methodsFor: 'initialization' stamp: 'TABARESKI 12/1/2020 19:51'!initialize 	cantidadPasajeros := 0.	fase := FaseNormal new. ! !!Auxilio methodsFor: 'initialization' stamp: 'TABARESKI 12/1/2020 19:25'!setFaseCovidDISPO		fase := FaseDISPO new.! !!Auxilio methodsFor: 'initialization' stamp: 'PabloS 11/28/2020 16:00'!cantidadPasajeros		^ cantidadPasajeros .! !!Auxilio methodsFor: 'initialization' stamp: 'TABARESKI 12/1/2020 19:25'!setFaseCovidNORMAL		fase := FaseNormal new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Auxilio class	instanceVariableNames: ''!!Auxilio class methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 20:29'!inicializarAuxiloEnFaseASPO	| unAuxilio |	unAuxilio  := self new.	unAuxilio setFaseCovidASPO.	^ unAuxilio.! !!Auxilio class methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 20:28'!inicializarAuxiloEnFaseDISPO	| unAuxilio |	unAuxilio  := self new.	unAuxilio setFaseCovidDISPO.	^ unAuxilio.! !!Auxilio class methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 20:29'!inicializarAuxiloEnFaseNormal	| unAuxilio |	unAuxilio  := self new.	unAuxilio setFaseCovidNORMAL.	^ unAuxilio.! !Object subclass: #FaseASPO	instanceVariableNames: ''	classVariableNames: ''	package: 'Algo3Parcial'!!FaseASPO commentStamp: 'TABARESKI 12/1/2020 19:58' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidadMaximaPasajeros:		<Object>    Implementation Points!!FaseASPO methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 20:17'!auxiliarCantidadPasajeros: unaCantidadDePasajeros	AuxiliarPasajerosEnASPOError signal: 'En fase ASPO un auxilio no puede cargar pasajeros'. 	! !Object subclass: #FaseDISPO	instanceVariableNames: 'cantidadMaximaPasajeros'	classVariableNames: ''	package: 'Algo3Parcial'!!FaseDISPO commentStamp: 'TABARESKI 12/1/2020 19:58' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidadMaximaPasajeros:		<Object>    Implementation Points!!FaseDISPO methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 20:15'!auxiliarCantidadPasajeros: unaCantidadDePasajeros	(unaCantidadDePasajeros > cantidadMaximaPasajeros ) 		ifTrue: [ AuxiliarMasDeUnPasajeroEnDISPOError signal: 'En fase DISPO un auxilio no puede cargar mas de un pasajero' ]		ifFalse: [ ^ unaCantidadDePasajeros ].! !!FaseDISPO methodsFor: 'initialization' stamp: 'TABARESKI 12/1/2020 19:54'!initialize 	cantidadMaximaPasajeros := 1.! !Object subclass: #FaseNormal	instanceVariableNames: 'cantidadMaximaPasajeros'	classVariableNames: ''	package: 'Algo3Parcial'!!FaseNormal commentStamp: 'TABARESKI 12/1/2020 19:58' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidadMaximaPasajeros:		<Object>    Implementation Points!!FaseNormal methodsFor: 'as yet unclassified' stamp: 'TABARESKI 12/1/2020 21:26'!auxiliarCantidadPasajeros: unaCantidadDePasajeros	(unaCantidadDePasajeros > cantidadMaximaPasajeros ) 		ifTrue: [ AuxiliarMasDeDosPasajeroEnFaseNormalError signal: 'Un Auxilio en ninguna circunstancia puede llevar mas de dos pasajeros'  ]		ifFalse: [ ^ unaCantidadDePasajeros  ]	! !!FaseNormal methodsFor: 'initialization' stamp: 'TABARESKI 12/1/2020 19:55'!initialize 	cantidadMaximaPasajeros := 2.! !