Error subclass: #CantidadInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Exception'!!CantidadInvalidaError commentStamp: 'Tabareski 11/2/2020 18:14' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Error subclass: #ParametroNoEsUnNumeroError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Exception'!!ParametroNoEsUnNumeroError commentStamp: 'Tabareski 11/2/2020 18:14' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Error subclass: #PedidoNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Exception'!!PedidoNoEncontradoError commentStamp: 'Tabareski 10/31/2020 15:53' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Error subclass: #PorcentajeInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Exception'!!PorcentajeInvalidoError commentStamp: 'Tabareski 11/2/2020 18:22' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Error subclass: #PrecioInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Exception'!!PrecioInvalidoError commentStamp: 'Tabareski 11/2/2020 18:14' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Error subclass: #ProductoNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Exception'!!ProductoNoEncontradoError commentStamp: 'Tabareski 11/2/2020 16:07' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Error subclass: #ValorInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Exception'!!ValorInvalidoError commentStamp: 'Tabareski 11/2/2020 18:22' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Object subclass: #AlgoPedidos	instanceVariableNames: 'pedidos'	classVariableNames: ''	package: 'TP1-Objetos'!!AlgoPedidos commentStamp: 'Tabareski 10/25/2020 14:03' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	pedidos:		<Object>     Implementation Points!!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 15:59'!actualizarProductoConNombre: unNombre conCantidad: unaCantidad para: unCliente	(self buscarPedido: unCliente) actualizarCantidadProducto: unNombre conCantidad: unaCantidad.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:04'!precioPedidoDe: unCliente 			^ (self buscarPedido: unCliente) calcularPrecioPedido.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:14'!crearPedidoParaRetirarPara: unNombre	pedidos add: (Pedido inicializarParaRetirarConNombre: unNombre).! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 15:57'!agregarMenuConNombre: unNombre precio: unPrecio yCantidad: unaCantidad  para: unCliente 	(self buscarPedido: unCliente) agregarMenuConNombre:  unNombre precio: unPrecio yCantidad: unaCantidad. ! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:02'!removerProductoConNombre: unNombre para: unCliente	(self buscarPedido: unCliente) removerProducto: unNombre.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:17'!cantidadProductosEnPedidoDe: unCliente	^ (self buscarPedido: unCliente) cantidadProductos.	! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:00'!crearPedidoConDeliveryPara: unNombre	"|unPedido|	unPedido := Pedido inicializarParaDeliveryConNombre: unNombre.	pedidos add: unPedido."	pedidos add: (Pedido inicializarParaDeliveryConNombre: unNombre).! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/26/2020 17:30'!removerMenuConNombre: unNombre para: unCliente	(self buscarPedido: unCliente) removerMenu: unNombre! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 15:58'!agregarCuponAPedidoDe: unCliente conValor: unValor	(self buscarPedido: unCliente) agregarDescuentoConValor: unValor.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:03'!removerCuponDePedidoDe: unCliente	(self buscarPedido: unCliente) removerCupon.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:18'!buscarPedido: unCliente	^ pedidos detect: [:pedido | pedido nombreCliente == unCliente] ifNone: [PedidoNoEncontradoError signal].! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 15:59'!agregarCuponAPedidoDe: unCliente conPorcentaje: unPorcentaje	(self buscarPedido: unCliente) agregarDescuentoConPorcentaje: unPorcentaje.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:19'!agregarProductoConNombre: unNombre precio: unPrecio yCantidad: unaCantidad para: unCliente	(self buscarPedido: unCliente) agregarProductoConNombre:  unNombre precio: unPrecio yCantidad: unaCantidad. 	! !!AlgoPedidos methodsFor: 'initialization' stamp: 'Tabareski 10/23/2020 21:14'!initialize	pedidos := OrderedCollection new.! !Object subclass: #Descuento	instanceVariableNames: 'cantMenus tipoDeDescuento'	classVariableNames: ''	package: 'TP1-Objetos'!!Descuento commentStamp: 'Tabareski 10/25/2020 18:06' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantMenus:		<Object>	descontado:		<Object>    Implementation Points!!Descuento methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/6/2020 18:11'!agregarValorDeDescuento: unValor	tipoDeDescuento := DescuentoPorValor inicializarConValor: unValor .! !!Descuento methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 19:27'!quitarMenu		cantMenus := cantMenus - 1.! !!Descuento methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 18:26'!agregarMenu	cantMenus := cantMenus + 1.! !!Descuento methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/6/2020 18:22'!quitarCupon	tipoDeDescuento := DescuentoPorValor inicializarConValor: 0.! !!Descuento methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/6/2020 18:12'!agregarPorcentajeDeDescuento: unPorcentaje		tipoDeDescuento := DescuentoPorPorcentaje inicializarConPorcentaje: unPorcentaje.! !!Descuento methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 20:17'!calcularDescuento: unPrecio	(cantMenus > 0) ifTrue: [ ^ unPrecio  ].	(cantMenus > 0) ifFalse:[ ^ (tipoDeDescuento realizarDescuento: unPrecio)]. 	! !!Descuento methodsFor: 'initialization' stamp: 'Tabareski 11/6/2020 18:11'!initialize 	cantMenus := 0.	tipoDeDescuento:= DescuentoPorValor inicializarConValor: 0.! !Object subclass: #DescuentoPorPorcentaje	instanceVariableNames: 'descontado'	classVariableNames: ''	package: 'TP1-Objetos'!!DescuentoPorPorcentaje commentStamp: 'Tabareski 10/25/2020 19:37' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!DescuentoPorPorcentaje methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 20:19'!realizarDescuento: unPrecio	^ unPrecio  * (1 - (descontado /100)).! !!DescuentoPorPorcentaje methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/5/2020 16:25'!agregarDescuentoPorcentaje: unPorcentaje	(unPorcentaje isNumber) ifFalse: [ParametroNoEsUnNumeroError signal].	((unPorcentaje < 0) | (unPorcentaje > 100)) ifTrue: [PorcentajeInvalidoError signal].			descontado := unPorcentaje ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DescuentoPorPorcentaje class	instanceVariableNames: ''!!DescuentoPorPorcentaje class methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/6/2020 18:23'!inicializarConPorcentaje: unPorcentaje	| descuentoPorPorcentaje |	descuentoPorPorcentaje  := self new.	descuentoPorPorcentaje  agregarDescuentoPorcentaje: unPorcentaje.	^ descuentoPorPorcentaje! !Object subclass: #DescuentoPorValor	instanceVariableNames: 'descontado'	classVariableNames: ''	package: 'TP1-Objetos'!!DescuentoPorValor commentStamp: 'Tabareski 10/25/2020 19:37' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	descontado:		<Object>    Implementation Points!!DescuentoPorValor methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 18:29'!agregarDescuentoValor: unValor	(unValor isNumber) ifFalse: [ParametroNoEsUnNumeroError signal].	(unValor < 0) ifTrue: [ValorInvalidoError signal].	descontado := unValor.! !!DescuentoPorValor methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 18:27'!realizarDescuento: unPrecio	(descontado < unPrecio) ifTrue:[ ^ unPrecio - descontado ] ifFalse: [ ^ 0 ].	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DescuentoPorValor class	instanceVariableNames: ''!!DescuentoPorValor class methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/6/2020 18:11'!inicializarConValor: unValor	| descuentoPorValor |	descuentoPorValor  := self new.	descuentoPorValor  agregarDescuentoValor: unValor.	^ descuentoPorValor ! !Object subclass: #Pedido	instanceVariableNames: 'nombre productos descuento entrega'	classVariableNames: ''	package: 'TP1-Objetos'!!Pedido methodsFor: 'accessing' stamp: 'Tabareski 11/2/2020 16:12'!nombreCliente	^ nombre.! !!Pedido methodsFor: 'initialization' stamp: 'Tabareski 10/26/2020 17:19'!initialize	descuento := Descuento new.	productos := OrderedCollection new.	entrega := 1.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:11'!removerProducto: unNombre	productos remove: (self buscarProducto: unNombre).! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 20:21'!agregarDescuentoConValor: unValor	descuento agregarValorDeDescuento: unValor.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:17'!agregarProductoConNombre: unNombre precio: unPrecio yCantidad: unaCantidad	|unProducto|	unProducto := Producto incializarConNombre: unNombre ConPrecio: unPrecio yCantidad: unaCantidad.	productos add: unProducto .! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 19:54'!agregarDescuentoConPorcentaje: unPorcentaje	descuento agregarPorcentajeDeDescuento: unPorcentaje.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:12'!removerMenu: unNombre	productos remove: (self buscarProducto: unNombre).	descuento quitarMenu.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:13'!cantidadProductos			| cantidad |	cantidad := 0.	productos do:[:producto |cantidad := cantidad + producto darCantidad.].	^ cantidad.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:16'!agregarMenuConNombre:  unNombre precio: unPrecio yCantidad: unaCantidad		|unProducto|	unProducto := Producto incializarConNombre: unNombre ConPrecio: unPrecio yCantidad: unaCantidad.	descuento agregarMenu.	productos add: unProducto .! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/26/2020 17:18'!entregaConDelivery	entrega := 1.2.	! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/26/2020 17:19'!entregaSeRetira	entrega := 1.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/26/2020 17:21'!calcularPrecioPedido	|precio|	precio := 0.	productos do:[:producto | precio := precio + producto calcularPrecioProducto.].	^ (descuento calcularDescuento: precio * entrega).	! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 20:29'!removerCupon	descuento quitarCupon.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:07'!buscarProducto: unNombre	^ productos detect: [:producto | producto nombreProducto == unNombre] 	ifNone: [ProductoNoEncontradoError signal].! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 16:15'!actualizarCantidadProducto: unNombre conCantidad: unaCantidad	(self buscarProducto: unNombre) actualizarCantidad: unaCantidad.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 15:29'!establecerNombre: unNombre	nombre:= unNombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pedido class	instanceVariableNames: ''!!Pedido class methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:12'!inicializarParaRetirarConNombre: unNombre			| pedido |	pedido := self new.	pedido establecerNombre: unNombre.	pedido entregaSeRetira.	^ pedido.! !!Pedido class methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:13'!inicializarParaDeliveryConNombre: unNombre			| pedido |	pedido := self new.	pedido establecerNombre: unNombre.	pedido entregaConDelivery .	^ pedido.! !Object subclass: #Producto	instanceVariableNames: 'nombre precio cantidad'	classVariableNames: ''	package: 'TP1-Objetos'!!Producto commentStamp: 'Tabareski 10/25/2020 14:03' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidad:		<Object>	nombre:		<Object>	precio:		<Object>     Implementation Points!!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 18:37'!actualizarCantidad: unaCantidad	self validarCantidad: unaCantidad.	cantidad := unaCantidad.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 19:03'!nombreProducto	^ nombre.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 18:58'!darCantidad	^ cantidad .! !!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 18:38'!establecerCantidad: unaCantidad.	self validarCantidad: unaCantidad.	cantidad := unaCantidad.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 15:38'!calcularPrecioProducto	^ (precio * cantidad). ! !!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/25/2020 15:33'!establecerNombre: unNombre	nombre := unNombre.! !!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/5/2020 16:17'!validarCantidad: unaCantidad.	(unaCantidad isNumber) ifFalse: [ ParametroNoEsUnNumeroError signal ].	(unaCantidad isFloat | (unaCantidad < 1)) ifTrue: [ CantidadInvalidaError signal ]. ! !!Producto methodsFor: 'as yet unclassified' stamp: 'Tabareski 11/2/2020 18:40'!establecerPrecio: unPrecio	(unPrecio isNumber) ifFalse: [ ParametroNoEsUnNumeroError signal ].	(unPrecio <= 0) ifTrue: [ PrecioInvalidoError signal ].	precio := unPrecio.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'as yet unclassified' stamp: 'Tabareski 10/31/2020 16:25'!incializarConNombre: unNombre ConPrecio: unPrecio yCantidad: unaCantidad		| producto |		producto := self new.		producto establecerNombre: unNombre.		producto establecerPrecio: unPrecio.		producto establecerCantidad: unaCantidad.		^ producto! !